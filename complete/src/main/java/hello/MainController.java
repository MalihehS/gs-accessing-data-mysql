package hello;

import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;

import com.google.common.collect.Lists;

@Controller    // This means that this class is a Controller
@RequestMapping(path = "/libraryall") // This means URL's start with /demo (after Application path)
public class MainController {

    @Autowired // This means to get the bean called userRepository
    private UserRepository userRepository; // Which is auto-generated by Spring, we will use it to handle the data

    @GetMapping(path = "/add") // Map ONLY GET Requests
    public @ResponseBody
    String addNewUser(@RequestParam String name, @RequestParam String email) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        User n = new User();
        n.setName(name);
        n.setEmail(email);
        userRepository.save(n);
        return "Saved";
    }

    @GetMapping(path = "/all")
    public @ResponseBody
    Iterable<User> getAllUsers() {
        return userRepository.findAll();  // This returns a JSON or XML with the users
    }

    // https://docs.spring.io/spring-data/data-commons/docs/1.6.1.RELEASE/reference/html/repositories.html
    @GetMapping(path = "/some") 
    public @ResponseBody
    User getSpecificUser(@RequestParam String name) {
        // This returns a JSON or XML with the users

        Iterable<User> all = userRepository.findAll();
        List<User> myList = Lists.newArrayList(all);
        User user = myList.stream().filter(c -> c.getName().equals(name)).findFirst().get();

        return user;
    }
}